---
import type { TActivityType, TActivity } from "../types/activity"
import type { TUser } from "../types/user"

import { IconActivity } from "./IconActivity"

type TProps = {
  activity: TActivity
  user: TUser
}

const { activity, user } = Astro.props as TProps

const userInitials = user?.name
  .split(/[ ,]+/)
  .map((name: string) => name[0])
  .join("")
---

<div class="card-activity-container">
  <section>
    <header>
      <p class="avatar">{userInitials}</p>
      <div>
        <a href={user?.url} class="username">{user?.name ?? ""}</a>
        <p class="subtitle">{activity.date} Â· {activity.location}</p>
      </div>
    </header>

    <div class="body">
      <IconActivity
        style={{
          display: "inline-flex",
          "font-size": "2rem",
          "justify-content": "center",
        }}
        type={activity.activityType as TActivityType}
      />

      <div>
        <h2><a href="#">{activity.title}</a></h2>
        <p>
          {activity.description}
        </p>

        <ul>
          <li><span>Time</span> {activity.duration}</li>
        </ul>
      </div>

      <img src="https://picsum.photos/500" />
    </div>

    <footer>
      <button type="button">4 likes</button>
      <button type="button">Like</button>
      <button type="button">Comment</button>
    </footer>
  </section>
</div>

<style>
  .card-activity-container {
    container-type: inline-size;
  }

  header {
    align-items: center;
    display: grid;
    grid-template-columns: 40px 1fr;
    gap: var(--size-3);

    & .username {
      font-size: 0.875rem;
      font-weight: 500;
    }

    & .subtitle {
      font-size: var(--font-size-0);
      margin: 0;
    }

    & .avatar {
      background-color: var(--brand);
      border-radius: 100vmax;
      display: grid;
      font-weight: 700;
      height: 40px;
      margin: 0;
      place-items: center;
      text-transform: uppercase;
      width: 100%;
    }
  }

  .body {
    align-items: center;
    display: grid;
    grid-template-columns: 40px 1fr;
    gap: var(--size-3);

    & img {
      background: var(--gradient-2);
      border-radius: var(--radius-3);
      grid-column: 1/-1;
      height: 100%;
      margin-block: var(--size-3);
      max-height: 218px;
      object-fit: cover;
      width: 100%;
    }

    & h2 {
      font-size: var(--font-size-3);

      & + p {
        font-size: var(--font-size-0);
        margin-block: 1em;
      }
    }
  }

  ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--size-3);
    list-style: none;
    margin: 1em 0 0;
    padding: 0;

    & li {
      display: flex;
      flex-direction: column;
      padding: 0;
      & span {
        font-size: var(--font-size-0);
      }
    }
  }

  section {
    background-color: var(--surface-1);
    border-radius: var(--radius-3);
    box-shadow: var(--shadow-2);
    padding-block: var(--size-3);
    padding-inline: var(--size-5);
  }

  @container (width <= 400px) {
    section {
      background-color: tomato;
    }
  }

  @media (prefers-color-scheme: dark) {
    section {
      background-color: hsl(var(--gray-9-hsl) / 70%);
    }
  }
</style>
